{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teemu\\\\OneDrive\\\\Desktop\\\\sooloilu\\\\kanban-app\\\\src\\\\components\\\\KanbanTable.js\";\nimport React, { useState } from \"react\";\nimport Column from \"./Column\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport \"../styles/Kanban.css\";\nimport * as Realm from \"realm-web\";\nconst REALM_APP_ID = \"Kanban-App\"; // e.g. myapp-abcde\n\nconst app = new Realm.App({\n  id: REALM_APP_ID\n});\nexport default function KanbanTable() {\n  // contains all tickets. has default data set\n  const [tickets, setTickets] = useState([{\n    text: \"Mee töihin\",\n    category: \"todo\"\n  }, {\n    text: \"tee sitä\",\n    category: \"todo\"\n  }, {\n    text: \"tee tätä\",\n    category: \"todo\"\n  }, {\n    text: \"tee hommia\",\n    category: \"ip\"\n  }, {\n    text: \"tämmöstä\",\n    category: \"done\"\n  }]); // stuff for db configuration\n\n  const [user, setUser] = useState(app.currentUser); // Create a component that displays the given user's details\n\n  function UserDetail({\n    user\n  }) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, \"Logged in with anonymous id: \", user.id));\n  } // Create a component that lets an anonymous user log in\n\n\n  function Login({\n    setUser\n  }) {\n    const loginAnonymous = async () => {\n      const user = await app.logIn(Realm.Credentials.anonymous());\n      setUser(user);\n    };\n\n    return /*#__PURE__*/React.createElement(\"button\", {\n      onClick: loginAnonymous,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }\n    }, \"Log In\");\n  } // function used to move ticket from column to column\n  // passed down to columns as a prop\n\n\n  const moveTicket = (text, category) => {\n    let tempArr = []; // temporary array\n\n    tickets.forEach(ticket => {\n      if (ticket.text === text) {\n        ticket.category = category;\n      }\n\n      tempArr.push(ticket);\n    });\n    setTickets(tempArr);\n  }; // passed down to columns\n\n\n  const addTicket = ticket => {\n    setTickets([...tickets, ticket]);\n  };\n\n  if (user) {\n    return /*#__PURE__*/React.createElement(DndProvider, {\n      backend: HTML5Backend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Kanban Table\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kanban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Column, {\n      header: \"ToDo\",\n      allTickets: tickets,\n      moveTicket: moveTicket,\n      addTicket: addTicket,\n      category: \"todo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      header: \"In Progress\",\n      allTickets: tickets,\n      moveTicket: moveTicket,\n      addTicket: addTicket,\n      category: \"ip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Column, {\n      header: \"Done\",\n      allTickets: tickets,\n      moveTicket: moveTicket,\n      addTicket: addTicket,\n      category: \"done\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n  return /*#__PURE__*/React.createElement(Login, {\n    setUser: setUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 10\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/teemu/OneDrive/Desktop/sooloilu/kanban-app/src/components/KanbanTable.js"],"names":["React","useState","Column","DndProvider","HTML5Backend","Realm","REALM_APP_ID","app","App","id","KanbanTable","tickets","setTickets","text","category","user","setUser","currentUser","UserDetail","Login","loginAnonymous","logIn","Credentials","anonymous","moveTicket","tempArr","forEach","ticket","push","addTicket"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Column from \"./Column\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nimport \"../styles/Kanban.css\";\n\nimport * as Realm from \"realm-web\";\n\nconst REALM_APP_ID = \"Kanban-App\"; // e.g. myapp-abcde\nconst app = new Realm.App({ id: REALM_APP_ID });\n\nexport default function KanbanTable() {\n  // contains all tickets. has default data set\n  const [tickets, setTickets] = useState([\n    { text: \"Mee töihin\", category: \"todo\" },\n    { text: \"tee sitä\", category: \"todo\" },\n    { text: \"tee tätä\", category: \"todo\" },\n    { text: \"tee hommia\", category: \"ip\" },\n    { text: \"tämmöstä\", category: \"done\" },\n  ]);\n  // stuff for db configuration\n  const [user, setUser] = useState(app.currentUser);\n\n  // Create a component that displays the given user's details\n  function UserDetail({ user }) {\n    return (\n      <div>\n        <h1>Logged in with anonymous id: {user.id}</h1>\n      </div>\n    );\n  }\n\n  // Create a component that lets an anonymous user log in\n  function Login({ setUser }) {\n    const loginAnonymous = async () => {\n      const user = await app.logIn(Realm.Credentials.anonymous());\n      setUser(user);\n    };\n    return <button onClick={loginAnonymous}>Log In</button>;\n  }\n\n  // function used to move ticket from column to column\n  // passed down to columns as a prop\n  const moveTicket = (text, category) => {\n    let tempArr = []; // temporary array\n    tickets.forEach((ticket) => {\n      if (ticket.text === text) {\n        ticket.category = category;\n      }\n      tempArr.push(ticket);\n    });\n\n    setTickets(tempArr);\n  };\n  // passed down to columns\n  const addTicket = (ticket) => {\n    setTickets([...tickets, ticket]);\n  };\n  if (user) {\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"container\">\n          <div>\n            <h1 className=\"header\">Kanban Table</h1>\n            <div className=\"kanban\">\n              <Column\n                header=\"ToDo\"\n                allTickets={tickets}\n                moveTicket={moveTicket}\n                addTicket={addTicket}\n                category=\"todo\"\n              />\n              <Column\n                header=\"In Progress\"\n                allTickets={tickets}\n                moveTicket={moveTicket}\n                addTicket={addTicket}\n                category=\"ip\"\n              />\n              <Column\n                header=\"Done\"\n                allTickets={tickets}\n                moveTicket={moveTicket}\n                addTicket={addTicket}\n                category=\"done\"\n              />\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n    );\n  }\n  return <Login setUser={setUser} />;\n}\n"]},"metadata":{},"sourceType":"module"}